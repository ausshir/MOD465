module lab4_windowed_flt (
         input clk,
		   input signed [17:0] x_in,
		   output reg signed [17:0] y,
         input [4:2] SW
         );

/*
reg signed [17:0] b0, b1, b2, b3, b4, b5, b6, b7,
                  b8, b9, b10, b11, b12, b13, b14, b15;
reg signed [17:0] x0, x1, x2, x3, x4, x5, x6, x7, x8, x9,
                  x10, x11, x12, x13, x14, x15, x16, x17,
						x18, x19,
						X20, X21, X2, X2, X2, X2, X2,
						X2, X2, X2,
*/
integer i;
reg signed [17:0]	b[15:0];
reg signed [17:0]	x[30:0];
reg signed [35:0] mult_out[15:0];
reg signed [17:0] sum_level_1[15:0];
reg signed [17:0] sum_level_2[7:0];
reg signed [17:0] sum_level_3[3:0];
reg signed [17:0] sum_level_4[1:0];
reg signed [17:0] sum_level_5;


always @ (posedge clk)
x[0] = { x_in[17], x_in[17:1]}; // sign extend input

always @ (posedge clk)
begin
for(i=1; i<31;i=i+1)
x[i] <= x[i-1];
end


always @ *
for(i=0;i<=14;i=i+1)
sum_level_1[i] = x[i]+x[30-i];

always @ *
sum_level_1[15] = x[15];


// always @ (posedge clk)
always @ *
for(i=0;i<=15; i=i+1)
mult_out[i] = sum_level_1[i] * b[i];


 always @ *
for(i=0;i<=7;i=i+1)
sum_level_2[i] = mult_out[2*i][34:17] + mult_out[2*i+1][34:17];



always @ *
for(i=0;i<=3;i=i+1)
sum_level_3[i] = sum_level_2[2*i] + sum_level_2[2*i+1];



always @ *
for(i=0;i<=1;i=i+1)
sum_level_4[i] = sum_level_3[2*i] + sum_level_3[2*i+1];


always @ *
sum_level_5 = sum_level_4[0] + sum_level_4[1];

always @ (posedge clk)
y = sum_level_5;


always @ *
   case(SW[4:2])
      3'h0: begin // Han Window
         b[ 0] = -18'sd      0;
         b[ 1] = -18'sd     27;
         b[ 2] = -18'sd    116;
         b[ 3] = -18'sd    114;
         b[ 4] =  18'sd    216;
         b[ 5] =  18'sd    865;
         b[ 6] =  18'sd   1324;
         b[ 7] =  18'sd    797;
         b[ 8] = -18'sd   1118;
         b[ 9] = -18'sd   3708;
         b[10] = -18'sd   5047;
         b[11] = -18'sd   2860;
         b[12] =  18'sd   4012;
         b[13] =  18'sd  14450;
         b[14] =  18'sd  25108;
         b[15] =  18'sd  31850;
      end

      3'h1: begin // Kaiser-Han
         b[ 0] = -18'sd    103;
         b[ 1] = -18'sd    404;
         b[ 2] = -18'sd    605;
         b[ 3] = -18'sd    356;
         b[ 4] =  18'sd    488;
         b[ 5] =  18'sd   1572;
         b[ 6] =  18'sd   2059;
         b[ 7] =  18'sd   1103;
         b[ 8] = -18'sd   1415;
         b[ 9] = -18'sd   4383;
         b[10] = -18'sd   5658;
         b[11] = -18'sd   3078;
         b[12] =  18'sd   4189;
         b[13] =  18'sd  14765;
         b[14] =  18'sd  25301;
         b[15] =  18'sd  31877;
      end

      3'h2: begin // Hamming
         b[ 0] = -18'sd     82;
         b[ 1] = -18'sd    238;
         b[ 2] = -18'sd    335;
         b[ 3] = -18'sd    207;
         b[ 4] =  18'sd    310;
         b[ 5] =  18'sd   1089;
         b[ 6] =  18'sd   1543;
         b[ 7] =  18'sd    883;
         b[ 8] = -18'sd   1199;
         b[ 9] = -18'sd   3886;
         b[10] = -18'sd   5204;
         b[11] = -18'sd   2915;
         b[12] =  18'sd   4056;
         b[13] =  18'sd  14527;
         b[14] =  18'sd  25155;
         b[15] =  18'sd  31857;
      end

      3'h3: begin // Kaiser-Hamming
         b[ 0] = -18'sd     43;
         b[ 1] = -18'sd    208;
         b[ 2] = -18'sd    359;
         b[ 3] = -18'sd    234;
         b[ 4] =  18'sd    348;
         b[ 5] =  18'sd   1200;
         b[ 6] =  18'sd   1662;
         b[ 7] =  18'sd    933;
         b[ 8] = -18'sd   1247;
         b[ 9] = -18'sd   3991;
         b[10] = -18'sd   5296;
         b[11] = -18'sd   2947;
         b[12] =  18'sd   4080;
         b[13] =  18'sd  14570;
         b[14] =  18'sd  25181;
         b[15] =  18'sd  31860;
      end

      3'h4: begin // Blackman
         b[ 0] = -18'sd      0;
         b[ 1] = -18'sd     10;
         b[ 2] = -18'sd     45;
         b[ 3] = -18'sd     48;
         b[ 4] =  18'sd     99;
         b[ 5] =  18'sd    442;
         b[ 6] =  18'sd    753;
         b[ 7] =  18'sd    503;
         b[ 8] = -18'sd    779;
         b[ 9] = -18'sd   2819;
         b[10] = -18'sd   4144;
         b[11] = -18'sd   2505;
         b[12] =  18'sd   3702;
         b[13] =  18'sd  13869;
         b[14] =  18'sd  24739;
         b[15] =  18'sd  31798;
      end

      3'h5: begin // Blackman-Kaiser
         b[ 0] = -18'sd      6;
         b[ 1] = -18'sd     50;
         b[ 2] = -18'sd    116;
         b[ 3] = -18'sd     95;
         b[ 4] =  18'sd    169;
         b[ 5] =  18'sd    671;
         b[ 6] =  18'sd   1048;
         b[ 7] =  18'sd    651;
         b[ 8] = -18'sd    948;
         b[ 9] = -18'sd   3260;
         b[10] = -18'sd   4591;
         b[11] = -18'sd   2681;
         b[12] =  18'sd   3856;
         b[13] =  18'sd  14158;
         b[14] =  18'sd  24923;
         b[15] =  18'sd  31824;
      end

      3'h6: begin // Rectangular
         b[ 0] = -18'sd   3934;
         b[ 1] = -18'sd   5960;
         b[ 2] = -18'sd   4539;
         b[ 3] = -18'sd     -0;
         b[ 4] =  18'sd   5364;
         b[ 5] =  18'sd   8344;
         b[ 6] =  18'sd   6556;
         b[ 7] = -18'sd      0;
         b[ 8] = -18'sd   8429;
         b[ 9] = -18'sd  13907;
         b[10] = -18'sd  11801;
         b[11] = -18'sd     -0;
         b[12] =  18'sd  19668;
         b[13] =  18'sd  41722;
         b[14] =  18'sd  59003;
         b[15] =  18'sd  65536;
      end

      3'h7: begin // Pre-Lab Kaiser
         b[ 0] =  18'sd      0;
         b[ 1] =  18'sd      0;
         b[ 2] =  18'sd      0;
         b[ 3] =  18'sd    125;
         b[ 4] = -18'sd    271;
         b[ 5] = -18'sd    486;
         b[ 6] =  18'sd    792;
         b[ 7] =  18'sd   1211;
         b[ 8] = -18'sd   1776;
         b[ 9] = -18'sd   2534;
         b[10] =  18'sd   3562;
         b[11] =  18'sd   5005;
         b[12] = -18'sd   7173;
         b[13] = -18'sd  10876;
         b[14] =  18'sd  19101;
         b[15] =  18'sd  58812;
      end
   endcase

/* for debugging
always@ *
for (i=0; i<=15; i=i+1)
if (i==15) % center coefficient
b[i] = 18'sd 131071; % almost 1 i.e. 1-2^(17)
else b[i] =18'sd0; % other than center coefficient
*/

/* for debugging
always@ *
for (i=0; i<=15; i=i+1)
 b[i] =18'sd 8192; % value of 1/16
*/
endmodule
